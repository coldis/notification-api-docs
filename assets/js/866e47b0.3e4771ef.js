(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[702],{4963:function(e,n,i){"use strict";i.r(n),i.d(n,{frontMatter:function(){return d},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var t=i(2122),a=i(9756),r=(i(7294),i(3905)),o=i(1395),s=i(8215),l=["components"],d={sidebar_position:1},p={unversionedId:"reference/nodejs-server",id:"reference/nodejs-server",isDocsHomePage:!1,title:"Node.js Server SDK",description:"This server-side SDK for node.js allows you to trigger sending notifications.",source:"@site/docs/reference/nodejs-server.md",sourceDirName:"reference",slug:"/reference/nodejs-server",permalink:"/docs/reference/nodejs-server",editUrl:"https://github.com/notificationapi-com/docs/edit/main/docs/reference/nodejs-server.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Display In-App Notifications",permalink:"/docs/quick-start/display-inapp-notifications"},next:{title:"JavaScript Client SDK",permalink:"/docs/reference/js-client"}},u=[{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[{value:"1. import or require",id:"1-import-or-require",children:[]},{value:"2. init",id:"2-init",children:[]},{value:"3. send",id:"3-send",children:[]}]}],c={toc:u};function m(e){var n=e.components,i=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,t.Z)({},c,i,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This server-side SDK for node.js allows you to trigger sending notifications."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)(o.Z,{groupId:"js-package-manager",defaultValue:"npm",values:[{label:"NPM",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install notificationapi-node-server-sdk\n"))),(0,r.kt)(s.Z,{value:"yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add notificationapi-node-server-sdk\n")))),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("h3",{id:"1-import-or-require"},"1. import or require"),(0,r.kt)(o.Z,{groupId:"js-import-require",defaultValue:"import",values:[{label:"Import",value:"import"},{label:"Require",value:"require"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"import",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import notificationapi from "notificationapi-node-server-sdk";\n'))),(0,r.kt)(s.Z,{value:"require",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const notificationapi = require("notificationapi-node-server-sdk").default;\n')))),(0,r.kt)("h3",{id:"2-init"},"2. init"),(0,r.kt)("p",null,"The init function is to configure the SDK and must run before the ",(0,r.kt)("a",{parentName:"p",href:"#3-send"},"send")," function. It requires your ",(0,r.kt)("inlineCode",{parentName:"p"},"clientId")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"clientSecret")," which you can get from ",(0,r.kt)("a",{parentName:"p",href:"https://app.notificationapi.com/environments"},"here"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'notificationapi.init("CLIENT_ID", "CLIENT_SECRET");\n')),(0,r.kt)("h3",{id:"3-send"},"3. send"),(0,r.kt)("h4",{id:"basic"},"Basic:"),(0,r.kt)("p",null,"The code sample below will send the ",(0,r.kt)("inlineCode",{parentName:"p"},"hello_world")," notification to the specified user."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'notificationapi.send({\n  notificationId: "hello_world",\n  user: { id: "123", email: "test@test.com" },\n});\n')),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"notificationId")," (string): The ID of the notification you wish to send. You can find this value from the dashboard."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"user.id")," (string): The ID of the user in your system."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"user.email")," (string): User's email address.")),(0,r.kt)("h4",{id:"merge-tags"},"Merge Tags"),(0,r.kt)("p",null,"If you are using ",(0,r.kt)("inlineCode",{parentName:"p"},"{{mergeTags}}")," in your notification designs, be sure to pass the actual values into the SDK. The example below replaces the ",(0,r.kt)("inlineCode",{parentName:"p"},"{{firstName}}")," merge tag in your design with the value ",(0,r.kt)("inlineCode",{parentName:"p"},"Jane"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"notificationapi.send({\n    notificationId: 'welcome-notification'\n    user: {id: USER_ID, email: USER_EMAIL},\n    mergeTags: { firstName: 'Jane' }\n})\n")),(0,r.kt)("h4",{id:"merge-tags-advanced"},"Merge Tags (Advanced)"),(0,r.kt)("p",null,"You can actually pass in complex objects and arrays into mergeTags to make your notifications future-proof. The example below sends a whole user object to the mergeTag. You can now use merge tags such as ",(0,r.kt)("inlineCode",{parentName:"p"},"{{user.firstName}}"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"{{user.lastName}}")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"{{user.orders[0].productName}}")," in the designs without going back to change your server code."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const user = {\n    firstName: 'Jane',\n    lastName: 'Doe',\n    orders: [\n        {\n            id: '123',\n            productName: 'socks'\n        },\n        {\n            id: '124',\n            productName: 'socks'\n        }\n    ]\n}\nnotificationapi.send({\n    notificationId: 'welcome-notification'\n    user: {id: USER_ID, email: USER_EMAIL},\n    mergeTags: { user }\n})\n")),(0,r.kt)("h4",{id:"options"},"Options"),(0,r.kt)("p",null,"You can dynamically modify certain notification behavior by passing in options. Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"notificationapi.send({\n    notificationId: 'welcome-notification'\n    user: {id: USER_ID, email: USER_EMAIL},\n    options: {\n        email: {\n            replyToAddresses: ['replyto@test.com']\n        }\n    }\n})\n")),(0,r.kt)("p",null,"Available options:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options.email.replyToAddresses")," (string[]): An array of email addresses to be used in the reply-to field of emails notifications."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options.email.ccAddresses")," (string[]): An array of emails to be CC'ed on the email notifications."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options.email.bccAddresses")," (string[]): An array of emails to be BCC'ed on the email notifications.")))}m.isMDXComponent=!0}}]);