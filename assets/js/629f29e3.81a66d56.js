(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[620],{5978:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return p},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var i=n(2122),a=n(9756),o=(n(7294),n(3905)),r=n(1395),l=n(8215),s=["components"],p={sidebar_position:2},c={unversionedId:"reference/js-client",id:"reference/js-client",isDocsHomePage:!1,title:"JS Client SDK (Front-End)",description:"This client-side SDK for JavaScript allows you to show in-app notifications in your front-end.",source:"@site/docs/reference/js-client.md",sourceDirName:"reference",slug:"/reference/js-client",permalink:"/docs/reference/js-client",editUrl:"https://github.com/notificationapi-com/docs/edit/main/docs/reference/js-client.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Server SDKs (Back-end)",permalink:"/docs/reference/server"}},u=[{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[{value:"Configuration Parameters:",id:"configuration-parameters",children:[]}]},{value:"With React.js",id:"with-reactjs",children:[]}],m={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This client-side SDK for JavaScript allows you to show in-app notifications in your front-end."),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)(r.Z,{groupId:"js-package-manager",defaultValue:"npm",values:[{label:"NPM",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install notificationapi-js-client-sdk\n"))),(0,o.kt)(l.Z,{value:"yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add notificationapi-js-client-sdk\n")))),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"The example below creates a NotificationAPI widget that automatically connects to our servers and pulls the notifications for the user."),(0,o.kt)(r.Z,{groupId:"js-import-require",defaultValue:"import",values:[{label:"Import",value:"import"},{label:"Require",value:"require"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"import",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import NotificationAPI from "notificationapi-js-client-sdk";\n\nnew NotificationAPI({\n  root: "parentDivID",\n  clientId: YOU_CLIENT_ID,\n  userId: USER_ID,\n});\n'))),(0,o.kt)(l.Z,{value:"require",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const NotificationAPI = require("notificationapi-js-client-sdk").default;\n\nnew NotificationAPI({\n  root: "parentDivID",\n  clientId: YOU_CLIENT_ID,\n  userId: USER_ID,\n});\n')))),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://github.com/notificationapi-com/notificationapi-js-client-sdk/blob/master/sample/popup.gif?raw=true",alt:"Sample"})),(0,o.kt)("h3",{id:"configuration-parameters"},"Configuration Parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"root")," (string): The ID of the HTML element that will contain the NotificationAPI widget. Ideally an empty div.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"clientId")," (string): Your NotificationAPI account clientId, which you can get from ",(0,o.kt)("a",{parentName:"p",href:"https://app.notificationapi.com/environments"},"here"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"userId")," (string): The ID of the user in your system. Same as the user ID used to trigger notifications in the server-side SDK.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"popupPosition")," (string/optional): The position of the notifications popup relative to the button. Valid options: topLeft, topRight, bottomLeft, bottomRight, leftTop, leftBottom, rightTop, rightBottom. Default: RightBottom.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"inline")," (boolean/optional): whether to render a notification bell button that opens a popup, or to directly render the notifications as a list. Default: false."))),(0,o.kt)("p",null,"Warning: Each instantiation will create a new instance of this widget, thus for performance reason it is recommended to only run it once, e.g. after page load. React users should read below."),(0,o.kt)("h2",{id:"with-reactjs"},"With React.js"),(0,o.kt)("p",null,'React\'s state management and re-rendering causes this widget to be destroyed and re-initialized with every state change. To avoid this issue, place the initialization and the root element in a "memo"-ized React component. Example:'),(0,o.kt)(r.Z,{defaultValue:"NotificationAPIComponent.js",values:[{label:"NotificationAPIComponent.js",value:"NotificationAPIComponent.js"},{label:"App.js",value:"App.js"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"NotificationAPIComponent.js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import NotificationAPI from "notificationapi-js-client-sdk";\nimport { memo, useEffect } from "react";\n\nconst NotificationAPIComponent = memo((props) => {\n  useEffect(() => {\n    new NotificationAPI({\n      root: "container",\n      clientId: YOUR_CLIENT_ID,\n      userId: props.userId,\n    });\n  });\n\n  return <div id="container"></div>;\n});\n\nexport default NotificationAPIComponent;\n'))),(0,o.kt)(l.Z,{value:"App.js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import NotificationAPIComponent from "./NotificationAPIComponent";\n\nfunction App() {\n  return (\n    <div>\n      <NotificationAPIComponent userId="USER_ID" />\n      <div> ... </div>\n    </div>\n  );\n}\n\nexport default App;\n')))))}d.isMDXComponent=!0}}]);